import { Coord } from './game';

export type LevelData = {
  id: string;
  colsLen: number;
  rowsLen: number;
  startY: number;
  endY: number;
  pointCoords: Coord[];
  edgesEndpointCoords: [Coord, Coord][];
  solutionStepsLen: number;
};

export class LevelUtil {
  /**
   * 将关卡数据转为关卡字符串
   * @param levelData
   */
  static dataToString(levelData: LevelData) {
    const sortCord = (a: Coord, b: Coord) => {
      if (a.y === b.y) {
        return a.x - b.x;
      }
      return a.y - b.y;
    };
    const numToString = (num: number) => ('' + num).padStart(2, '0');
    levelData.pointCoords.sort(sortCord);
    levelData.edgesEndpointCoords.sort((a, b) => sortCord(a[0], b[0]));
    return [
      numToString(levelData.rowsLen) + numToString(levelData.colsLen),
      // levelData.startY + '' + levelData.endY,
      numToString(levelData.startY) + numToString(levelData.endY),
      levelData.pointCoords.reduce((before, current) => {
        return before + numToString(current.x) + numToString(current.y);
      }, ''),
      levelData.edgesEndpointCoords.reduce((before, current) => {
        return (
          before +
          numToString(current[0].x) +
          numToString(current[0].y) +
          numToString(current[1].x) +
          numToString(current[1].y)
        );
      }, ''),
      levelData.solutionStepsLen,
    ].join('====');
  }
  /**
   * 根据关卡字符串生成关卡
   * @param levelString
   * @returns
   */
  static stringToData(levelString: string, id: string): LevelData {
    const [rowsAndColsLen, startAndEndY, pointCoordsString, edgesEndpointCoordsString, solutionStepsLenString] =
      levelString.split('====');
    const rowsLen = Number(rowsAndColsLen.slice(0, 2));
    const colsLen = Number(rowsAndColsLen.slice(2, 4));

    const startY = Number(startAndEndY.slice(0, 2));
    const endY = Number(startAndEndY.slice(2, 4));

    const pointCoords = pointCoordsString.split('').reduce((before, current, index) => {
      if (index % 4 === 3) {
        before.push({
          x: Number(pointCoordsString.slice(index - 3, index - 1)),
          y: Number(pointCoordsString.slice(index - 1, index + 1)),
        });
      }
      return before;
    }, [] as Coord[]);

    const edgesEndpointCoords = edgesEndpointCoordsString
      .split('')
      .reduce((before, current, index) => {
        if (index % 8 === 7) {
          before.push([
            {
              x: Number(edgesEndpointCoordsString.slice(index - 7, index - 5)),
              y: Number(edgesEndpointCoordsString.slice(index - 5, index - 3)),
            },
            {
              x: Number(edgesEndpointCoordsString.slice(index - 3, index - 1)),
              y: Number(edgesEndpointCoordsString.slice(index - 1, index + 1)),
            },
          ]);
        }
        return before;
      }, [] as [Coord, Coord][]);
    const firstActiveEdgeIndex = edgesEndpointCoords.findIndex((endpointCoords) => {
      return endpointCoords[0].x === -1 || endpointCoords[1].x === -1;
    });
    edgesEndpointCoords.unshift(edgesEndpointCoords.splice(firstActiveEdgeIndex, 1)[0]);
    return {
      id,
      colsLen,
      rowsLen,
      startY,
      endY,
      pointCoords,
      edgesEndpointCoords,
      solutionStepsLen: Number(solutionStepsLenString),
    };
  }
}

const systemLevelString = `
0606====0303====040005000001010102020302000305030304040401050205====00010101000100030101010502020205-103000301050205====7
0606====0002====020005000101040100020202030202030403010405040005====-10002000500050401010104040104030002000502020203====7
0606====0404====00000200050001010301040105020003040302040304010504050505====0200020405000502-1040204====10
0606====0004====010002000400030105010102040200030203050300040304010503050405====-10001000102040201050305====16
0606====0505====000002000500010103010202040201030004030405040205====050005040101010302020402-1050205====16
0606====0204====0000020005000101040103020502000304030204010503050505====01010401-10203020302030501050305====17
0606====0200====000002000101040102020502000303030204040401050505====0000020001010401-10202020204040401050505====23
0606====0505====00000100030002010401050101020402000301030303050302040404000502050505====01000300-105000500050205====22
0606====0405====00000100020005000101040100020502000302030403010404040005010503050505====0101010400020003-104010401040404====21
0606====0302====00000100050000010201040102020103040301040504020504050505====00000001010001030201020204010403-103010301040504====21
0606====0104====00000100040001010301000202020502030304030204000501050505====04000403-101010101010105030103030502050503030403====21
0606====0202====01000500000104010202030201030403010405040005020504050505====0100050000010401-1020202040304050504050500050205====22
0606====0103====000002000300050001010301000202020402010302030503000403040404000503050505====02000202-10101010103020300040005====24
0606====0304====000002000400050002010002030205020103020304030004020405040005010503050405====0200020103020305-1030103====27
0606====0403====010003000500000102010401010205020003030301040404000503050505====030003030001000304010404-104010400050305====31
0606====0302====00000100020003000500020105010002030204020203010405040005010502050405====0000010002010203-10302030104050402050405====32
0606====0304====00000100030004000101050100020202050202030403050303040005010502050505====03000304-10302030203020504030503====34
0606====0201====05000301040100020202050200030103030302040404050400050305====0500050203010303-10200020002020203030305====36
0606====0002====02000500010103010401000201020402000303030503010402040404010504050505====-1000200000200030503050502040404====38
0606====0104====010103010401050100020202030204030204030400050305====-1010101030103020401040300020005====11
0606====0301====0000010002000001020103010401000301030504000502050305====01000103020002010001000303010305-1030003====13
0606====0502====02000400050004010002020203020103010404040005010502050305====040104040002000501030104-1050005====9
0606====0104====00000200050001010201040104020103030305030404000503050505====0200020105000503-10101010402040403030305====17
0606====0500====040003010302040201030303040305030004050403050505====030103020303030505040505-1050305====17
0606====0502====040003010302040201030303040305030004050403050505====030103020303030505040505-1050305====16
0606====0003====000001000200030000010301040105010002030204030204030403050505====-1000000030003010401040305010505====14
0606====0305====03000500000101010201030105010003010402040304000501050405====0001000303010304-1030003====12
0606====0100====010002000300010103010401030201030203030302040404050401050305====-1010101040104040302030303030305====17
0606====0103====010002000300010103010401030201030203030302040404050401050305====-1010101040104040302030303030305====17
0606====0200====000001000500010103010501000202020003010304030503020400050305====01010103-102000202020204====17
0606====0201====000001000500010103010501000202020003010304030503020400050305====01010103-102000202020204====16
0606====0203====000001000500010103010501000202020003010304030503020400050305====01010103-102000202020204====18
0606====0102====0500030105010402000303030403000404040504000501050205====05000501-1010301030103030501050400040005====13
0606====0404====02000300050003010401010204020502050300040104020402050505====0200020405030505-1040004====15
0606====0401====000001000200040005000301050100020003040300040304040402050305====000000020200020504030404-1040004====15
0606====0003====000000010201040103020402050201030303020405040005010502050305====-100000000010005020102040302030305020504====16
0606====0404====000001000500020105010302040205020203030304030004020404050505====00000004050005010203020404030405-1040004====15
0606====0200====020003000400040103020003010302030403010403040504000502050405====0300030204010403-10203020003000501030104====20
0606====0304====010002000400000101010301050101020202050200030303040305030404====020002020001000305010502-103000304030404====20
0606====0204====00000200030004000301030204020203040300040304050401050205====03010302-1020302030203040402040302030205====6
0606====0301====01000400050000010101030104010102030201030104050400050105====040004010500050401020103-1030103====16
0606====0502====000004000001010101020202030205020003020302040404000501050205====040004040001000302040205-1050005====19
0606====0201====000004000500000101010201000202020402020403040504000501050305====05000504-10200020202020403040305====17
0606====0201====00000100020000010301040100020202030204020003010300050405====010001030200020204010402-1020002====17
0606====0205====00000100020000010301040100020202030204020003010300050405====010001030200020204010402-1020002====20
0606====0305====0100050004010501000203020103010402040404020503050405====050005010401040403020305-103010301030104====17
0606====0303====00000300040000010101040101020202050203030204010503050505====00000001030003030101010205020505-1030303====18
0606====0100====00000200000101010401020203020203000402040304040401050205====02000202-10100010101010502030204====20
0606====0101====020003000400050001010301040100020202030201030203010405040005====05000504-1010101000200050202020301030104====18
0606====0103====020003000400050001010301040100020202030201030203010405040005====05000504-1010101000200050202020301030104====18
0606====0400====00000200040001010301040103020103000401040204020503050405====01010103040104050302030501030104-1040004====18
0606====0402====00000200040001010301040103020103000401040204020503050405====01010103040104050302030501030104-1040004====21
0606====0002====000001000200040004010501020203020003010302030303000404040005====-1000000020002020401040400040005====18
0606====0003====000001000200040004010501020203020003010302030303000404040005====-1000000020002020401040400040005====17
0606====0202====030004000500000102010501020203020203010402040304040401050505====04000404-1020202020202030302030401040105====25
0606====0304====000001000500010102010301040105010002030205020303050300040404====00000002050005010401040403020303-1030303====17
0606====0403====020003000500000101010501000203020003040301040304030504050505====030003020501050500020003-104010403040305====18
0606====0504====010003000400000101010402050204030503000403040404000501050505====03000304040004020101010505030505-1050005====17
0606====0003====00000100020000010301040101020202000304030304010503050505====-1000000020002020102010503040305====17
0606====0404====0000040001010301040104020103020304030004010402040405====000000040400040104030405-1040004====17
0606====0100====020003000201040105010002010204020204050402050505====-10102010401040202040205====18
0606====0301====01000200030004000500010102010002010302030104050400050405====0200020105000504-103010301030104====17
0606====0303====01000200030004000500010102010002010302030104050400050405====0200020105000504-103010301030104====17
0606====0500====000004000001020103010501020200030103020300040404000501050505====000100030501050500040005-1050005====27
0606====0503====000004000001020103010501020200030103020300040404000501050505====000100030501050500040005-1050005====20
0606====0504====000004000001020103010501020200030103020300040404000501050505====000100030501050500040005-1050005====25
0606====0405====00000300040005000201050200040104020404040504020503050405====0300030505000502-104000404040405====17
`;



export const systemLevels = systemLevelString.split('\n').filter(item => !!item).map((item, index) => {
  return LevelUtil.stringToData(item.trim(), (index + 1).toString());
});
